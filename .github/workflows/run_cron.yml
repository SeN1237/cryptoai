# Plik: .github/workflows/run_cron.yml
name: 'Cykl Symulacji AI (Cron)'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *' 

jobs:
  run-simulations:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout kodu
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 

      # 2. Setup Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      # 3. Instalacja kluczowych zależności systemowych (wymaganych przez XGBoost)
      # Te biblioteki są niezbędne do poprawnej kompilacji C/C++ (którą XGBoost czasami wymaga)
      - name: Install System Dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential

      # 4. Instalacja zależności Python (KRYTYCZNY KROK)
      - name: Install Python Dependencies (Forced Reinstall)
        # Instalujemy w trybie upgrade i bez cache'u dla stabilności.
        # Wymuszamy instalację z requirements.
        run: pip install -r requirements.txt --upgrade --no-cache-dir
        
      # 5. Pobranie danych NLTK (dla sentymentu VADER)
      - name: Download NLTK data
        run: python -c "import nltk; nltk.download('vader_lexicon')"
        
      # 6. DIAGNOSTYKA: Potwierdzenie instalacji (jeśli ten krok się uda, to problem zniknął)
      - name: Verify XGBoost Installation
        run: python -c "import xgboost; print('XGBoost is installed successfully.')"
        
      # 7. Uruchomienie głównego skryptu symulacji
      - name: Run Multi-Simulations and Aggregate
        run: python run_multiple_simulations_crypto.py
