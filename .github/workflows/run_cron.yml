# Plik: .github/workflows/run_cron.yml
name: 'Cykl Symulacji AI (Cron)'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *' 

jobs:
  run-simulations:
    # 1. ðŸš€ KRYTYCZNA ZMIANA: UÅ¼ycie gotowego obrazu Docker (zastÄ™puje runs-on: ubuntu-latest)
    container: 
      image: continuumio/miniconda3:latest # Gotowy obraz z Conda, stabilny dla ML
      
    runs-on: ubuntu-latest # Ten tag jest nadal potrzebny
    
    steps:
      # 1. Checkout kodu
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 

      # 2. Instalacja brakujÄ…cych zaleÅ¼noÅ›ci
      - name: Install Dependencies
        # UÅ¼ywamy Å›cieÅ¼ki do instalatora Pythona wewnÄ…trz kontenera /opt/conda/bin/pip
        # To gwarantuje, Å¼e XGBoost bÄ™dzie zainstalowany w poprawnym miejscu
        run: /opt/conda/bin/pip install -r requirements.txt --upgrade --no-cache-dir

      # 3. Pobranie danych NLTK (dla sentymentu VADER)
      - name: Download NLTK data
        run: /opt/conda/bin/python -c "import nltk; nltk.download('vader_lexicon')"
        
      # 4. DIAGNOSTYKA I Uruchomienie GÅ‚Ã³wnego Skryptu
      - name: Verify and Run Script
        run: |
          /opt/conda/bin/python -c "import xgboost; print('XGBoost jest zainstalowany i widoczny w kontenerze.')"
          
          # Uruchomienie skryptu
          /opt/conda/bin/python run_multiple_simulations_crypto.py
