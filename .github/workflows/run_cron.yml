# Plik: .github/workflows/run_cron.yml
name: 'Cykl Symulacji AI (Cron)'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *' 

jobs:
  run-simulations:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout kodu (Kluczowa zmiana dla zapisu)
      - name: Checkout Code (Full Write Permission)
        uses: actions/checkout@v4
        with:
          # U≈ºywamy domy≈õlnego tokenu
          token: ${{ secrets.GITHUB_TOKEN }} 
          fetch-depth: 0 
          # üö® KRYTYCZNA FLAGA: Musimy jawnie ustawiƒá uprawnienia do zapisu
          # na katalog roboczy (choƒá token powinien je mieƒá, to GHA bywa kapry≈õny)
          persist-credentials: true 
          
      # 2. Setup Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      # 3. Instalacja kluczowych zale≈ºno≈õci systemowych
      - name: Install System Dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential
        
      # 4. Instalacja zale≈ºno≈õci (Teraz ju≈º dzia≈Ça stabilnie)
      - name: Install Python Dependencies
        run: pip install -r requirements.txt --upgrade --no-cache-dir
        
      # 5. Pobranie danych NLTK (dla sentymentu VADER)
      - name: Download NLTK data
        run: python -c "import nltk; nltk.download('vader_lexicon')"

      # 6. Uruchomienie g≈Ç√≥wnego skryptu symulacji
      - name: Run Multi-Simulations and Aggregate
        run: python run_multiple_simulations_crypto.py
        
      # 7. üö® KRYTYCZNY KROK: Ustawienie bezpiecznego katalogu dla Gita
      # Zapobiega b≈Çƒôdom "fatal: detected dubious ownership"
      - name: Set Git Safe Directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        
      # 8. Konfiguracja i Wypchniƒôcie (Push)
      - name: Push Results to GitHub
        run: |
          # Konfiguracja u≈ºytkownika, kt√≥ry dokonuje commita
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          
          # Dodanie wygenerowanego folderu (z plikami CSV)
          git add top_results_crypto/average_top_crypto.csv
          
          # Sprawdzenie, czy sƒÖ zmiany do commita (je≈õli nie ma, pominie commit)
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "ü§ñ [CRON] Aktualizacja u≈õrednionych wynik√≥w (LightGBM)"
            # Push (u≈ºywamy HEAD, by by≈Ço pewne)
            git push origin HEAD
          else
            echo "Brak nowych zmian w pliku CSV do wypchniƒôcia."
          fi
