import streamlit as st
import pandas as pd
import os
import time
from datetime import datetime

# --- KONFIGURACJA KRYPTOWALUT ---
AVG_FILE = "top_results_crypto/average_top_crypto.csv"
REFRESH_INTERVAL_SECONDS = 3600 # Od≈õwie≈ºanie dashboardu co 1 godzinƒô
NUM_SIMULATIONS = 10 

# --- WIZUALIZACJA ---
st.set_page_config(layout="wide", page_title="AI Crypto Advisor - Aggregated Results")
st.title("‚Çø Agregacja Prognoz AI (Top Kryptowaluty)")
st.markdown("Dashboard wczytuje u≈õrednione wyniki z pliku **average_top_crypto.csv**, generowanego cyklicznie co 6 godzin przez Zadanie Cron.")
st.markdown("---")

try:
    # Wczytujemy u≈õrednione wyniki
    avg_df = pd.read_csv(AVG_FILE)
    
    # Formatowanie kolumny procentowej
    avg_df['≈örednia Prognoza 21 Dni'] = avg_df['pred_%'].apply(lambda x: f"{x:.2f}%")
    avg_df = avg_df.rename(columns={'ticker': 'Kryptowaluta'})
    avg_df = avg_df[['Kryptowaluta', '≈örednia Prognoza 21 Dni']]
    
    st.subheader(f"üöÄ Top {len(avg_df)} Aktyw√≥w (≈örednia z {NUM_SIMULATIONS} Symulacji)")
    st.markdown("Wysoki procent oznacza wiƒôkszy oczekiwany zwrot w ciƒÖgu najbli≈ºszych 21 dni. Pamiƒôtaj, ≈ºe dane opierajƒÖ siƒô na historycznych cenach i newsach.")
    
    # Wy≈õwietlenie tabeli
    st.dataframe(avg_df, use_container_width=True, hide_index=True)
    
    # Dodanie informacji o ostatniej aktualizacji
    if os.path.exists(AVG_FILE):
        timestamp = os.path.getmtime(AVG_FILE)
        dt_object = datetime.fromtimestamp(timestamp)
        st.caption(f"Ostatnia aktualizacja danych (plik average_top_crypto.csv): {dt_object.strftime('%Y-%m-%d %H:%M:%S')}")
        
except FileNotFoundError:
    st.error(f"Plik wynik√≥w {AVG_FILE} nie zosta≈Ç jeszcze wygenerowany przez Zadanie Cron. Sprawd≈∫, czy run_multiple_simulations_crypto.py dzia≈Ça poprawnie.")
except Exception as e:
    st.error(f"WystƒÖpi≈Ç b≈ÇƒÖd podczas wczytywania danych: {e}")

# Automatyczne od≈õwie≈ºanie strony Streamlit
time.sleep(REFRESH_INTERVAL_SECONDS)
st.rerun()
